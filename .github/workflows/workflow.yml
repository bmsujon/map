name: build_and_deploy

on:
  push:
    branches:
      - "main"
      - "staging"

env:
  TAG: $(echo $GITHUB_SHA | head -c7)
  IMAGE: 661254676507.dkr.ecr.ap-southeast-1.amazonaws.com/$(echo $GITHUB_REPOSITORY | cut -d "/" -f2)
  RELEASE: $(echo $GITHUB_REPOSITORY | cut -d "/" -f2)
  BRANCH: $(echo $GITHUB_REF | cut -d'/' -f 3)"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    name: Docker Build & Push
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t ${{ env.IMAGE }}:${{ env.TAG }} .
          docker push ${{ env.IMAGE }}:${{ env.TAG }}

      - name: slack notification
        uses: 8398a7/action-slack@v3
        with:
          job_name: Docker Build & Push
          status: ${{ job.status }}
          fields: all
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  deployment:
    runs-on: ubuntu-latest
    needs: build_and_push
    name: Deploy to Kubernetes
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: save and decode kubeconfig
        run: |
          mkdir ~/.kube
          echo ${{ secrets.KUBE_CONFIG }} | base64 --decode > ~/.kube/config

      - name: SOPS Binary Installer
        uses: mdgreenwald/mozilla-sops-action@v1.1.0

      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v0.8.0
        with:
          additional-helm-plugins: https://github.com/jkroepke/helm-secrets.git --version 2.0.2
          helmfile-version: "v0.138.4"

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Deploy to Staging
        if: github.ref == 'refs/heads/staging'
        run: |
          export RELEASE=${{ env.RELEASE }}
          helmfile -e staging sync  --set=image.repository=${{ env.IMAGE }} --set=image.tag=${{ env.TAG }}

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          export RELEASE=${{ env.RELEASE }}
          helmfile -e production sync --set=image.repository=${{ env.IMAGE }} --set=image.tag=${{ env.TAG }}

      - name: slack notification
        uses: 8398a7/action-slack@v3
        with:
          job_name: Deploy to Kubernetes
          status: ${{ job.status }}
          fields: all
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
